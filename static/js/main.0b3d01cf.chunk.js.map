{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","NONE","Error","reverse","App","useState","setIsReversed","setSortType","className","type","onClick","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAC3D,MACF,KAAKV,EAASY,OACZN,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UACjE,MACF,KAAKb,EAASc,KACZ,MACF,QACE,MAAM,IAAIC,MAAM,mBAOpB,OAJIV,GACFC,EAAaU,UAGRV,G,SApCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMiB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBgB,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBjB,IAAaJ,EAASO,UAAY,YAC/DgB,QAvBmB,WACzBH,EAAYpB,EAASO,WAmBjB,iCAQA,wBACEe,KAAK,SACLD,UAAS,4BAAuBjB,IAAaJ,EAASY,QAAU,YAChEW,QA3Ba,WACnBH,EAAYpB,EAASY,SAuBjB,4BAQA,wBACEU,KAAK,SACLD,UAAS,6BAAwBhB,GAAc,YAC/CkB,QA/BQ,WACdJ,GAAc,SAAAK,GAAQ,OAAKA,MA2BvB,sBAQEpB,IAAaJ,EAASc,MAAQT,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QApCI,WACZJ,GAAc,GACdC,EAAYpB,EAASc,OA+Bf,sBAUJ,6BACE,6BACGZ,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCnHjDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b3d01cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n      break;\n    case SortType.LENGTH:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      throw new Error('wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(reversed => !reversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}