{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","reorderedFood","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","onClick","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAjDD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKP,EAASY,SACZD,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAC3D,MACF,KAAKf,EAASiB,OACZN,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UACjE,MACF,KAAKlB,EAASM,KACZ,MACF,QACE,MAAM,IAAIa,MAAM,mBAOpB,OAJIf,GACFO,EAAaS,UAGRT,EAwBeU,CAAkBpB,EACtC,CAAEM,WAAUH,eAEd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAaP,EAASY,UAAY,YAC/DY,QA1BmB,WACzBhB,EAAYR,EAASY,WAsBjB,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBf,IAAaP,EAASiB,QAAU,YAChEO,QA9Ba,WACnBhB,EAAYR,EAASiB,SA0BjB,4BAQA,wBACEM,KAAK,SACLD,UAAS,6BAAwBlB,GAAc,YAC/CoB,QAlCQ,WACdnB,GAAc,SAAAoB,GAAQ,OAAKA,MA8BvB,sBAQElB,IAAaP,EAASM,MAAQF,IAC9B,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAvCI,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAkCf,sBAUJ,6BACE,6BACGG,EACEiB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCtHjDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a2cf127.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n      break;\n    case SortType.LENGTH:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      throw new Error('wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(reversed => !reversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const reorderedFood = getReorderedGoods(goodsFromServer,\n    { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedFood\n            .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}