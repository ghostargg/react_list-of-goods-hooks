{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sortedGoods","NONE","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","setSortType","className","type","onClick","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAErBI,EAAwB,GAgB5B,OAdIH,IAAaJ,EAASQ,KACxBD,EAAcD,EACLF,IAAaJ,EAASS,SAC/BF,EAAcD,EACXI,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAClDR,IAAaJ,EAASc,SAC/BP,EAAcD,EACXI,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,WAG/DV,IACFE,EAAc,YAAIA,GAAaS,WAG1BT,G,SAjCJP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMiB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASQ,MAAlD,mBAAOJ,EAAP,KAAiBgB,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBjB,IAAaJ,EAASS,UAAY,YAC/Dc,QAvByB,WAC/BH,EAAYpB,EAASS,WAmBjB,iCAQA,wBACEa,KAAK,SACLD,UAAS,4BAAuBjB,IAAaJ,EAASc,QAAU,YAChES,QA3BmB,WACzBH,EAAYpB,EAASc,SAuBjB,4BAQA,wBACEQ,KAAK,SACLD,UAAS,6BAAwBhB,GAAc,YAC/CkB,QA/Bc,WACpBJ,GAAc,SAAAK,GAAQ,OAAKA,MA2BvB,sBAQEpB,IAAaJ,EAASQ,MAAQH,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QApCU,WAClBJ,GAAc,GACdC,EAAYpB,EAASQ,OA+Bf,sBAUJ,6BACE,6BACGN,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cChHjDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cc3c44e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  let sortedGoods: string[] = [];\n\n  if (sortType === SortType.NONE) {\n    sortedGoods = visibleGoods;\n  } else if (sortType === SortType.ALPHABET) {\n    sortedGoods = visibleGoods\n      .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n  } else if (sortType === SortType.LENGTH) {\n    sortedGoods = visibleGoods\n      .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n  }\n\n  if (isReversed) {\n    sortedGoods = [...sortedGoods].reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(reversed => !reversed);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}